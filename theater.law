law(theater,language(coffeescript))

TicketID = 0
ID = TicketID++

#MONITOR
UPON "adopted", ->
	if @arguments.monitor?
    DO "set", key: "monitor", value: @arguments.monitor
  if @arguments.monitor is true
  	return true

  if @arguments.Type?

  	if @arguments.Type is "globe"
  		DO "forward", receiver: @arguments.monitor, message: "#{@self} is formed"
			DO "set", key: "Type", value: @arguments.Type

		if @arguments.Type is "agent"
			DO "forward", receiver: @arguments.monitor, message: "#{@self} is formed"
			DO "set", key: "Type", value: @arguments.Type
			DO "set", key: "Ticket", value: 0

	return true

#Arrived
#REQUEST, TICKET globe
UPON "arrived", ->
  if CS("monitor")?	#DEBUG
    DO "forward", receiver: CS("monitor"), message: "#{@self} receives a message from #{@sender}"

 		if CS("Type") is "globe"

    	if @message.type is "Request"
        if not CS("RequestFrom#{@sender}")?
          DO "set", key: CS("RequestFrom#{@sender}"), value: true
        else
          DO "forward", receiver: @sender, message: "Still processing previous request"
        return true

      if @message.type is "Ticket"
        if CS("Ticket#{@message.ticket}")?
          DO "unset", key: CS("Ticket#{@message.ticket}"), value: false
          DO "set", key: CS("OpenDoorFor#{@sender}"), value: true
        else
          DO "forward", receiver: @sender, message: "Invalid Ticket."
      	return true

#REQUEST, TICKET agent
UPON "arrived", ->
  if CS("Type") is "agent"
 		if @message.type is "Request"
    	if CS("Ticket") is 0
        DO "forward", receiver: @sender, message: "Sorry! I do not have a ticket."
	    else
        DO "set", key: "RequestFrom#{@sender}", value: true
     	return true

  	if @message.type is "Ticket"
      if CS("RequestTo#{@sender}")?
        DO "unset", key: "RequestTo#{@sender}", value: false
	      DO "set", key: "Ticket", value: @message.ticket
      return true

#Automatic responses
UPON "arrived", ->
  DO "deliver"
  return true

#Sent
#REQUEST globe
UPON "sent", ->
	if CS("monitor")? #DEBUG
    DO "forward", receiver: CS("monitor"), message: "#{@self} sent a message to #{@receiver}"

	if CS("Type") is "globe"
		if @message.type is "Request"
  		DO "deliver", message: "Globe is not allowed to make a request"

		if @message.type is "Open"
      if CS("OpenDoorFor#{@receiver}")?
        DO "forward", message: "Door is open"
      else
        DO "deliver", message: "Invalid ticket was provided"

    if @message.type is "Ticket"
      if CS("RequestFrom#{@receiver}")?
	      ID++
  	    DO "unset", key: "RequestFrom#{@receiver}", value: false
    	  DO "set", key: "Ticket#{ID}", value: true
      	DO "forward", receiver: @sender, message: {type: "Ticket", ticket: ID}
			else
  	    DO "deliver", message: "Ticket cannot be provided"
    	return true

#REQUEST agent
UPON "sent", ->
	if CS("Type") is "agent"
		if @message.type is "Request"
      if CS("Ticket") is not 0
        DO "deliver", message: "You already have a ticket. You cannot request another."
      else
        DO "set", key: "RequestTo#{@receiver}", value: true
    if @message.type is "Ticket"
      if CS("RequestFrom#{@receiver}")? or @receiver.type is "globe"
        DO "unset", key: "Ticket", value: 0
        DO "forward", message: {type: "Ticket", ticket: CS("Ticket")}

#Any other message
UPON "sent", ->
	DO "forward"
	return true

#DISCONNECT
UPON "disconnected", ->
  if CS("monitor")?
    DO "forward", receiver: CS("monitor"), message: "#{@self} is dissolved"
  DO "quit"
  return true
