law(theater,language(coffeescript))

TicketID = 0
ID = TicketID++

#MONITOR
UPON "adopted", ->
	if @arguments.monitor?
    DO "set", key: "monitor", value: @arguments.monitor
  if @arguments.monitor is true
  	return true

  if @arguments.Type?

  	if @arguments.Type is "globe"
  		DO "forward", receiver: @arguments.monitor, message: "#{@self} is formed"
			DO "set", key: "Type", value: @arguments.Type

		if @arguments.Type is "agent"
			DO "forward", receiver: @arguments.monitor, message: "#{@self} is formed"
			DO "set", key: "Type", value: @arguments.Type
			DO "set", key: "Ticket", value: 0

	return true

#REQUEST, OFFER globe
UPON "arrived", ->
  if CS("monitor")?	#DEBUG
    DO "forward", receiver: CS("monitor"), message: "#{@self} receives a message from #{@sender}"

 		if CS("Type") is "globe"
    	if @message.type is "Request"
        ID = TicketID++
        #DO "set", key: "Ticket#{ID}", value: true
        DO "forward", receiver: @sender, message: {type: "Ticket", Ticket: ID}
  		  DO "deliver", message: "You received a request from #{@sender}. Ticket was provided."
      if @message.type is "Ticket"
        # TODO Need to check ticket and open door
        DO "deliver"
    		return true

#REQUEST, OFFER agent
UPON "arrived", ->
  if CS("Type") is "agent"
 	 if @message.type is "Request"
 	  if CS("Ticket") is 0
      DO "forward", receiver: @sender, message: "No tickets left. Please ask someone else."
      DO "deliver", message: "You received a request from #{@sender}, however, you have no tickets left."
    else
      DO "deliver", message: "You received a request from #{@sender}. Please respond in the format 'AgentID {\"type\": Offer, \"Price\": price_of_ticket}'."
    return true

#Automatic responses
UPON "arrived", ->
  DO "deliver"
  return true

#OFFER globe
UPON "sent", ->
	if CS("monitor")? #DEBUG
    DO "forward", receiver: CS("monitor"), message: "#{@self} sent a message to #{@receiver}"

	if @message.type is "Request" and CS("Type") is "globe"
  	DO "deliver", message: "Globe is not allowed to make a request"
  	return true

#OFFER agent
UPON "sent", ->
	if CS("Type") is "agent"
		if @message.type is "Request"
			if CS("Ticket") is not 0
      	DO "deliver", message: "You already have a ticket. No request sent."
      else
        DO "forward"
      return true
		if @message.type is "Ticket"
			if CS("Ticket") is 0
  			DO "deliver", message: "You do not have any tickets left to provide."
	  	else
        # TODO remove ticket from this agent
  			DO "deliver", message: "Here is ticket"
 			return true
    return true

#Any other message
UPON "sent", ->
	DO "forward"
	return true

#DISCONNECT
UPON "disconnected", ->
  if CS("monitor")?
    DO "forward", receiver: CS("monitor"), message: "#{@self} is dissolved"
  DO "quit"
  return true
